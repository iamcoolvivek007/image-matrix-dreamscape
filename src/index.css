
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. */

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 120 100% 50%;

    --card: 0 0% 5%;
    --card-foreground: 120 100% 50%;

    --popover: 0 0% 5%;
    --popover-foreground: 120 100% 50%;

    --primary: 120 100% 25%;
    --primary-foreground: 120 100% 90%;

    --secondary: 120 50% 10%;
    --secondary-foreground: 120 100% 50%;

    --muted: 120 20% 15%;
    --muted-foreground: 120 50% 60%;

    --accent: 120 100% 25%;
    --accent-foreground: 120 100% 90%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 120 20% 20%;
    --input: 120 20% 20%;
    --ring: 120 100% 50%;

    --radius: 0.5rem;

    --sidebar-background: 0 0% 5%;
    --sidebar-foreground: 120 100% 50%;
    --sidebar-primary: 120 100% 25%;
    --sidebar-primary-foreground: 120 100% 90%;
    --sidebar-accent: 120 20% 15%;
    --sidebar-accent-foreground: 120 100% 50%;
    --sidebar-border: 120 20% 20%;
    --sidebar-ring: 120 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Courier New', monospace;
  }
}

@layer utilities {
  /* Matrix-style animations */
  .typing-animation {
    overflow: hidden;
    border-right: 2px solid #0f0;
    white-space: nowrap;
    animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;
  }

  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: #0f0; }
  }

  /* Glitch effect */
  .glitch-text {
    animation: glitch 2s infinite;
    position: relative;
  }

  .glitch-text::before,
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    left: 0;
    width: 100%;
    height: 100%;
  }

  @keyframes glitch {
    0%, 90%, 100% {
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
  }

  /* Scanning line effect */
  .scan-line {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, #0f0, transparent);
    animation: scan 3s linear infinite;
    z-index: 5;
  }

  @keyframes scan {
    0% { transform: translateY(-2px); }
    100% { transform: translateY(100vh); }
  }

  /* Fade in animation */
  .animate-fade-in {
    animation: fadeIn 2s ease-out forwards;
    opacity: 0;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Matrix green color variations */
  .text-matrix-bright { color: #00ff41; }
  .text-matrix-dim { color: #003300; }
  .bg-matrix-dark { background-color: #001100; }
}
